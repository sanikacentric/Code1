package SeptemberSelenium.SeptemberSelenium;
import java.util.HashMap;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
public class toopkfreq {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
public static int [] topkfrequet(int [] nums, int k) {
	HashMap<Integer,Integer>count = new HashMap<>();
	for(int n: nums) {
		count.put(n,count.getOrDefault(n, 0)+1);
	}
	Queue<Integer>heap= new PriorityQueue((n1,n2)->count.get(n1)-count.get(n2));// min heap STORES smallest elementat top , so that its easy to remove from min heap
	
	for(int n: count.keySet()) {
		heap.add(n);
		if(heap.size()>k) {
			heap.poll();
		}
	}
int [] top = new int [k];
for(int i=k-1;i>0;i--) {
	top[i]=heap.poll();
}
return top;

}

}
